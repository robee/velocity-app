{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mukund\\\\Documents\\\\Manulife-Waterloo\\\\velocity-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; //import { useState } from \"react\";\n\nimport \"./App.css\"; //import Map from \"./components/Map\";\n\nimport NavBar from \"./components/NavBar\";\nimport Header from \"./components/Header\"; // import FunctionClickTest0 from './components/FunctionClickTest0'\n// import Test from './components/Test'\n\nimport MarkerClick from \"./components/MarkerClick\"; // import ButtonClickTest1 from './components/ButtonClickTest1';\n\nimport Footer from \"./components/Footer\";\nimport Timeline from \"./components/Timeline\";\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport * as parksData from \"./data/Buildings.json\";\n\nfunction Map() {\n  _s();\n\n  const [selectedPark, setSelectedPark] = useState(null);\n  return /*#__PURE__*/React.createElement(GoogleMap, {\n    defaultZoom: 15,\n    defaultCenter: {\n      lat: 43.469761,\n      lng: -80.538811\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, parksData.buildings.map(park => /*#__PURE__*/React.createElement(Marker, {\n    key: park.buildingId,\n    position: {\n      lat: park.latitude,\n      lng: park.longitude\n    },\n    onClick: () => {\n      setSelectedPark(park);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })), selectedPark && /*#__PURE__*/React.createElement(InfoWindow, {\n    position: {\n      lat: selectedPark.latitude,\n      lng: selectedPark.longitude\n    },\n    onCloseClick: () => {\n      setSelectedPark(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, selectedPark.buildingName), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, selectedPark.Description))));\n}\n\n_s(Map, \"lqLqef+Um00vg+yM0kY8VQqn1wQ=\");\n\n_c = Map;\nconst WrappedMap = withScriptjs(_c2 = withGoogleMap(Map));\n_c3 = WrappedMap;\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(MarkerClick, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(WrappedMap, {\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD0LW50_GtYuB0nlw5-YhW5i1uBCGNe3XA&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 31\n      }\n    }),\n    containerElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }),\n    mapElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 27\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Timeline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n}\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"WrappedMap$withScriptjs\");\n$RefreshReg$(_c3, \"WrappedMap\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/Users/Mukund/Documents/Manulife-Waterloo/velocity-app/src/App.js"],"names":["React","NavBar","Header","MarkerClick","Footer","Timeline","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","parksData","Map","selectedPark","setSelectedPark","useState","lat","lng","buildings","map","park","buildingId","latitude","longitude","buildingName","Description","WrappedMap","App","width","height"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n//import { useState } from \"react\";\r\nimport \"./App.css\";\r\n//import Map from \"./components/Map\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Header from \"./components/Header\";\r\n// import FunctionClickTest0 from './components/FunctionClickTest0'\r\n// import Test from './components/Test'\r\nimport MarkerClick from \"./components/MarkerClick\";\r\n// import ButtonClickTest1 from './components/ButtonClickTest1';\r\nimport Footer from \"./components/Footer\";\r\nimport Timeline from \"./components/Timeline\";\r\nimport {\r\n  GoogleMap,\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  Marker,\r\n  InfoWindow,\r\n} from \"react-google-maps\";\r\nimport * as parksData from \"./data/Buildings.json\";\r\n\r\nfunction Map() {\r\n  const [selectedPark, setSelectedPark] = useState(null);\r\n  return (\r\n    <GoogleMap\r\n      defaultZoom={15}\r\n      defaultCenter={{ lat: 43.469761, lng: -80.538811 }}\r\n    >\r\n      {parksData.buildings.map((park) => (\r\n        <Marker\r\n          key={park.buildingId}\r\n          position={{ lat: park.latitude, lng: park.longitude }}\r\n          onClick={() => {\r\n            setSelectedPark(park);\r\n          }}\r\n        />\r\n      ))}\r\n\r\n      {selectedPark && (\r\n        <InfoWindow\r\n          position={{ lat: selectedPark.latitude, lng: selectedPark.longitude }}\r\n          onCloseClick={() => {\r\n            setSelectedPark(null);\r\n          }}\r\n        >\r\n          <div>\r\n            <h2>{selectedPark.buildingName}</h2>\r\n            <p>{selectedPark.Description}</p>\r\n          </div>\r\n        </InfoWindow>\r\n      )}\r\n    </GoogleMap>\r\n  );\r\n}\r\n\r\nconst WrappedMap = withScriptjs(withGoogleMap(Map));\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"page-container\">\r\n      <div className=\"content-wrap\">\r\n        <Header />\r\n        <React.Fragment>\r\n          <div>\r\n            <NavBar />\r\n          </div>\r\n          <MarkerClick />\r\n          {/* <FunctionClickTest0 /> */}\r\n          {/* <ButtonClickTest1 /> */}\r\n          {/* <Test /> */}\r\n          <div style={{ width: \"100vw\", height: \"100vh\" }}>\r\n            <WrappedMap\r\n              googleMapURL={\r\n                \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD0LW50_GtYuB0nlw5-YhW5i1uBCGNe3XA&v=3.exp&libraries=geometry,drawing,places\"\r\n              }\r\n              loadingElement={<div style={{ height: \"100%\" }} />}\r\n              containerElement={<div style={{ height: \"100%\" }} />}\r\n              mapElement={<div style={{ height: \"100%\" }} />}\r\n            />\r\n          </div>\r\n        </React.Fragment>\r\n        <Timeline />\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}