{"ast":null,"code":"var _jsxFileName = \"/Users/mightymoe/Documents/GitHub/velocity-app/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //import { useState } from \"react\";\n\nimport \"./App.css\"; //import Map from \"./components/Map\";\n//import NavBar from \"./components/NavBar\";\n\nimport Header from \"./components/Header\"; // import FunctionClickTest0 from './components/FunctionClickTest0'\n// import Test from './components/Test'\n\nimport VerticalMenu from \"./components/Verticalmenu\"; // import ButtonClickTest1 from './components/ButtonClickTest1';\n\nimport Footer from \"./components/Footer\";\nimport Timeline from \"./components/Timeline\";\nimport Verticalmenu from \"./components/Verticalmenu\";\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport * as parksData from \"./data/Buildings.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map(props, level) {\n  _s();\n\n  const [selectedPark, setSelectedPark] = useState(null);\n  console.log(props.currentKeyword);\n  console.log(props.currentKeynum);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    defaultZoom: 16,\n    defaultCenter: {\n      lat: 43.47110427132252,\n      lng: -80.5448679188489\n    },\n    children: [parksData.buildings.filter(building => {\n      for (let i = 0; i < building.keyword.length; i++) {\n        if (props.currentKeyword === null || building.keyword[i] === props.currentKeyword) {\n          return building;\n        }\n      }\n    }).filter(resource => {\n      if (props.currentKeynum === null || resource.timeline === props.currentKeynum) {\n        return resource;\n      }\n    }).map(park => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: park.latitude,\n        lng: park.longitude\n      },\n      onClick: () => {\n        setSelectedPark(park);\n      }\n    }, park.buildingId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this)), selectedPark && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: selectedPark.latitude,\n        lng: selectedPark.longitude\n      },\n      onCloseClick: () => {\n        setSelectedPark(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedPark.resourceName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Organizer: \", selectedPark.organizer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: [\"Location: \", selectedPark.buildingName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedPark.Description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"lqLqef+Um00vg+yM0kY8VQqn1wQ=\");\n\n_c = Map;\n\nfunction App() {\n  _s2();\n\n  const [width, setWidth] = React.useState(window.innerWidth);\n  const [height, setHeight] = React.useState(window.innerHeight);\n  const [currentKeyword, setKeyword] = useState(null);\n  const [currentKeynum, setKeynum] = useState(null);\n  const WrappedMap = withScriptjs(withGoogleMap(Map));\n\n  const updateWidthAndHeight = () => {\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateWidthAndHeight);\n    return () => window.removeEventListener(\"resize\", updateWidthAndHeight);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"70vw\",\n            height: \"80vh\"\n          },\n          children: /*#__PURE__*/_jsxDEV(WrappedMap, {\n            className: \"googlemap\",\n            currentKeyword: currentKeyword,\n            currentKeynum: currentKeynum,\n            googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD0LW50_GtYuB0nlw5-YhW5i1uBCGNe3XA&v=3.exp&libraries=geometry,drawing,places\",\n            loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 31\n            }, this),\n            containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this),\n            mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                height: \"100%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 27\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Timeline, {\n        setKeynum: setKeynum,\n        currentKeynum: currentKeynum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Verticalmenu, {\n        setKeyword: setKeyword,\n        currentKeyword: currentKeyword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"aCF9xwOdAYQ+cURm/VncHxRcJ4Q=\");\n\n_c2 = App;\nexport default App; //test\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/mightymoe/Documents/GitHub/velocity-app/src/App.js"],"names":["React","useState","useEffect","Header","VerticalMenu","Footer","Timeline","Verticalmenu","GoogleMap","withScriptjs","withGoogleMap","Marker","InfoWindow","parksData","Map","props","level","selectedPark","setSelectedPark","console","log","currentKeyword","currentKeynum","lat","lng","buildings","filter","building","i","keyword","length","resource","timeline","map","park","latitude","longitude","buildingId","resourceName","organizer","buildingName","Description","App","width","setWidth","window","innerWidth","height","setHeight","innerHeight","setKeyword","setKeynum","WrappedMap","updateWidthAndHeight","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n//import { useState } from \"react\";\nimport \"./App.css\";\n//import Map from \"./components/Map\";\n//import NavBar from \"./components/NavBar\";\nimport Header from \"./components/Header\";\n// import FunctionClickTest0 from './components/FunctionClickTest0'\n// import Test from './components/Test'\nimport VerticalMenu from \"./components/Verticalmenu\";\n// import ButtonClickTest1 from './components/ButtonClickTest1';\nimport Footer from \"./components/Footer\";\nimport Timeline from \"./components/Timeline\";\nimport Verticalmenu from \"./components/Verticalmenu\";\n\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  Marker,\n  InfoWindow,\n} from \"react-google-maps\";\nimport * as parksData from \"./data/Buildings.json\";\n\nfunction Map(props, level) {\n  const [selectedPark, setSelectedPark] = useState(null);\n  console.log(props.currentKeyword);\n  console.log(props.currentKeynum);\n  return (\n    <GoogleMap\n      defaultZoom={16}\n      defaultCenter={{ lat: 43.47110427132252, lng: -80.5448679188489 }}\n    >\n      {parksData.buildings\n        .filter(\n          (building) => {\n            for (let i = 0; i < building.keyword.length; i++) {\n              if (props.currentKeyword === null ||\n              building.keyword[i] === props.currentKeyword) {\n                return building;\n              }\n            }\n          }\n        )\n        .filter(\n          (resource) => {\n            if ((props.currentKeynum === null) ||\n            resource.timeline === props.currentKeynum) {\n              return resource;\n            }\n          }\n        )\n        .map((park) => (\n          <Marker\n            key={park.buildingId}\n            position={{ lat: park.latitude, lng: park.longitude }}\n            onClick={() => {\n              setSelectedPark(park);\n            }}\n          />\n        ))}\n        \n\n      {selectedPark && (\n        <InfoWindow\n          position={{ lat: selectedPark.latitude, lng: selectedPark.longitude }}\n          onCloseClick={() => {\n            setSelectedPark(null);\n          }}\n        >\n          <div>\n            <h3>{selectedPark.resourceName}</h3>\n            <h6>Organizer: {selectedPark.organizer}</h6>\n            <h6>Location: {selectedPark.buildingName}</h6>\n            <p>{selectedPark.Description}</p>\n          </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n}\n\nfunction App() {\n\nconst [width, setWidth] = React.useState(window.innerWidth);\nconst [height, setHeight] = React.useState(window.innerHeight);\n\n  const [currentKeyword, setKeyword] = useState(null);\n  const [currentKeynum, setKeynum] = useState(null);\n\n  const WrappedMap = withScriptjs(withGoogleMap(Map));\n  \n  const updateWidthAndHeight = () => {\n    setWidth(window.innerWidth);\n    \n    setHeight(window.innerHeight);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateWidthAndHeight);\n\n    return () => window.removeEventListener(\"resize\", updateWidthAndHeight);\n});\n\n  return (\n    \n    <div className=\"page-container\">\n      <div className=\"content-wrap\">\n      \n        <Header />\n        <React.Fragment>\n          {/* <NavBar /> */}\n          {/* <MarkerClick /> */}\n\n          {/* <FunctionClickTest0 /> */}\n          {/* <ButtonClickTest1 /> */}\n          {/* <Test /> */}\n          <div style={{  width: \"70vw\", height: \"80vh\" }}>\n            <WrappedMap className=\"googlemap\"\n              currentKeyword={currentKeyword}\n              currentKeynum={currentKeynum}\n              googleMapURL={\n                \"https://maps.googleapis.com/maps/api/js?key=AIzaSyD0LW50_GtYuB0nlw5-YhW5i1uBCGNe3XA&v=3.exp&libraries=geometry,drawing,places\"\n              }\n              loadingElement={<div style={{ height: \"100%\" }} />}\n              containerElement={<div style={{ height: \"100%\" }} />}\n              mapElement={<div style={{ height: \"100%\" }} />}\n            />\n          </div>\n        </React.Fragment>\n        <Timeline setKeynum={setKeynum} currentKeynum={currentKeynum} />\n        <Verticalmenu setKeyword={setKeyword} currentKeyword={currentKeyword} />\n      </div>\n\n      <Footer />\n    </div>\n   \n  );\n}\n\nexport default App;\n//test"]},"metadata":{},"sourceType":"module"}