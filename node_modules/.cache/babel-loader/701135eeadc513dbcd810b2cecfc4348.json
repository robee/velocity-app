{"ast":null,"code":"var _jsxFileName = \"/Users/mightymoe/Documents/GitHub/velocity-app/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from \"react\";\nimport './Map.css';\nimport './image_follow.css';\nimport Zoom from './zoom.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getScreenPositionInElement = evt => {\n  return {\n    x: evt.clientX,\n    y: evt.clientY\n  };\n};\n\nconst getCursorPositionInElement = evt => {\n  return {\n    x: evt.clientX - evt.currentTarget.getBoundingClientRect().left,\n    y: evt.clientY - evt.currentTarget.getBoundingClientRect().top\n  };\n};\n\nconst Map = () => {\n  _s();\n\n  // mouse position\n  const [mousePos, setMousePos] = useState({\n    x: 0,\n    y: 0\n  });\n  const [screenPos, setScreenPos] = useState({\n    x: 0,\n    y: 0\n  }); // map code\n\n  const [deltaX, setDeltaX] = useState(0);\n  const [deltaY, setDeltaY] = useState(0);\n  const [whileMoving, setWhileMoving] = useState(false);\n  const [styles, setStyles] = useState({\n    left: 20,\n    top: 0\n  });\n\n  const moveStart = e => {\n    setDeltaX(e.screenX - e.currentTarget.getBoundingClientRect().left);\n    setDeltaY(e.screenY - e.currentTarget.getBoundingClientRect().top);\n    setWhileMoving(true);\n  };\n\n  const whileMoves = e => {\n    setMousePos(getCursorPositionInElement(e));\n    setScreenPos(getScreenPositionInElement(e));\n\n    if (whileMoving) {\n      let left = e.screenX - deltaX;\n      let top = e.screenY - deltaY;\n\n      if (left > 0 && top > 0) {\n        console.log(left, top);\n        setStyles({\n          left: left,\n          top: top\n        });\n      }\n    }\n  };\n\n  const moveEnd = () => {\n    setWhileMoving(false);\n  }; // marker code\n  //const [mousePos, setMousePos] = useState({x:0, y:0});\n  //const [isMouseDown, setIsMouseDown] = useState(false);\n  //const handleMouseDown = () => {\n  //setIsMouseDown(true);\n  //}\n  //const handleMouseUp = () => {\n  //setIsMouseDown(false);\n  //}\n  // const handleMouseMove = (evt) => {\n  //   if (whileMoving) {\n  //     setMousePos(getCursorPositionInElement(evt));\n  //   };\n  // }\n  // const alertFunction = (num) => {\n  //   console.log('marker clicked');\n  //   if (((styles.left + (100 * num) - 25 <= mousePos.x) && (mousePos.x <= styles.left + (100 * num) + 25))\n  //       && ((styles.top + (100 * num) - 25 <= mousePos.y) && (mousePos.y <= styles.top + (100 * num) + 25))) {\n  //      alert(`Marker ${num} has been clicked`);\n  //   };\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"Map\",\n    onMouseDown: moveStart,\n    onMouseMove: whileMoves,\n    onMouseUp: moveEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"zoom\",\n      onWheelCapture: Zoom,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: styles,\n        src: \"/images/campus_map_half.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ImageFollow\" //onMouseMove={handleMouseMove}\n        //onMouseDown={handleMouseDown}\n        //onMouseUp={handleMouseUp}\n        ,\n        children: [\"x:\", mousePos.x, \" , y:\", mousePos.y, \" | x:\", screenPos.x, \" , y:\", screenPos.y, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg\",\n          style: {\n            left: styles.left + 100,\n            top: styles.top + 100\n          },\n          children: \"Marker1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"always_half\",\n          style: {\n            left: styles.left + 200,\n            top: styles.top + 200\n          },\n          children: \"Marker2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 7\n  }, this) //const handleMouseDown = () => {\n  //setIsMouseDown(true);\n  //}\n  //const handleMouseUp = () => {\n  //setIsMouseDown(false);\n  //}\n  // const handleMouseMove = (evt) => {\n  // if (whileMoving) {\n  // setMapPos(getCursorPositionInElement(evt));\n  // };\n  // }\n  // return (\n  //   <div>\n  //     <div class='Map'\n  //       onMouseDown={moveStart}\n  //       onMouseMove={whileMoves}\n  //       onMouseUp={moveEnd}>\n  //      <div class =\"zoom\" onWheelCapture={Zoom}>\n  //       <img style={styles}\n  //         src=\"/images/campus_map_half.png\" alt=\"\" />\n  //       <div className='ImageFollow'\n  //       //onMouseMove={handleMouseMove}\n  //       //onMouseDown={handleMouseDown}\n  //       //onMouseUp={handleMouseUp}\n  //       >\n  //         x:{styles.left} | y:{styles.top}\n  //         <div className='msg' style={{ left: styles.left - 100, top: styles.top - 100 }}>\n  //           marker1\n  //         </div>\n  //         <div className='always_half' style={{ left: styles.left + 100, top: styles.top + 100 }}>\n  //           marker2\n  //         </div>\n  //         </div>\n  //         </div>\n  //     </div>\n  //   </div>\n  ;\n};\n\n_s(Map, \"jnl5p9tMDsfvtPp8NiCwelKCpbU=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/mightymoe/Documents/GitHub/velocity-app/src/components/Map.js"],"names":["React","useState","Zoom","getScreenPositionInElement","evt","x","clientX","y","clientY","getCursorPositionInElement","currentTarget","getBoundingClientRect","left","top","Map","mousePos","setMousePos","screenPos","setScreenPos","deltaX","setDeltaX","deltaY","setDeltaY","whileMoving","setWhileMoving","styles","setStyles","moveStart","e","screenX","screenY","whileMoves","console","log","moveEnd"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from \"react\";\nimport './Map.css';\nimport './image_follow.css';\nimport Zoom from './zoom.jsx';\n\nconst getScreenPositionInElement = (evt) => {\n  return {\n    x: evt.clientX,\n    y: evt.clientY\n  }\n}\n\nconst getCursorPositionInElement = (evt) => {\n\treturn {\n\t\tx : evt.clientX - evt.currentTarget.getBoundingClientRect().left,\n\t\ty : evt.clientY - evt.currentTarget.getBoundingClientRect().top\n\t}\n};\n\nconst Map = () => {\n  // mouse position\n  const [mousePos, setMousePos] = useState({x:0, y:0});\n  const [screenPos, setScreenPos] = useState({x:0, y:0})\n\n  // map code\n\n  const [deltaX, setDeltaX] = useState(0);\n  const [deltaY, setDeltaY] = useState(0);\n  const [whileMoving, setWhileMoving] = useState(false);\n  const [styles, setStyles] = useState({ left: 20, top: 0 });\n\n  \n  const moveStart = (e) => {\n    setDeltaX(e.screenX - e.currentTarget.getBoundingClientRect().left);\n    setDeltaY(e.screenY - e.currentTarget.getBoundingClientRect().top);\n    setWhileMoving(true);\n  };\n\n  const whileMoves = (e) => {\n    setMousePos(getCursorPositionInElement(e));\n    setScreenPos(getScreenPositionInElement(e));\n\n\n    if (whileMoving) {\n\n\n      let left = e.screenX - deltaX;\n      let top = e.screenY - deltaY;\n\n     \n      if (left > 0 && top > 0 ) { \n        console.log(left, top)\n      setStyles({\n        left: left,\n        top: top\n\n      });\n      }\n    }\n  };\n\n  const moveEnd = () => {\n    setWhileMoving(false);\n  };\n\n  // marker code\n\n    //const [mousePos, setMousePos] = useState({x:0, y:0});\n    //const [isMouseDown, setIsMouseDown] = useState(false);\n  \n  \n    //const handleMouseDown = () => {\n      //setIsMouseDown(true);\n    //}\n  \n    //const handleMouseUp = () => {\n      //setIsMouseDown(false);\n    //}\n  \n    // const handleMouseMove = (evt) => {\n    //   if (whileMoving) {\n    //     setMousePos(getCursorPositionInElement(evt));\n    //   };\n    // }\n\n    // const alertFunction = (num) => {\n    //   console.log('marker clicked');\n    //   if (((styles.left + (100 * num) - 25 <= mousePos.x) && (mousePos.x <= styles.left + (100 * num) + 25))\n    //       && ((styles.top + (100 * num) - 25 <= mousePos.y) && (mousePos.y <= styles.top + (100 * num) + 25))) {\n    //      alert(`Marker ${num} has been clicked`);\n    //   };\n    // };\n\n\n    return (\n      <div class='Map' \n      onMouseDown= {moveStart}\n      onMouseMove={whileMoves}\n      onMouseUp={moveEnd}>\n         <div class =\"zoom\" onWheelCapture={Zoom}>\n          <img  style={styles}\n          src=\"/images/campus_map_half.png\" alt=\"\"/>\n \n      <div className='ImageFollow'\n\t\t\t//onMouseMove={handleMouseMove}\n\t\t\t//onMouseDown={handleMouseDown}\n\t\t\t//onMouseUp={handleMouseUp}\n      >\n\t\tx:{mousePos.x} , y:{mousePos.y} | x:{screenPos.x} , y:{screenPos.y}\n\n\t\t<div className='msg' \n         style={{left: styles.left + 100, top: styles.top + 100}}>\n\t\t\tMarker1\n\t\t</div>\n\n\t\t<div className='always_half' \n         style={{left: styles.left + 200, top: styles.top + 200}}>\n\t\t\tMarker2\n\t\t</div>\n    </div>\n\t</div>\n      </div>\n\n\n  //const handleMouseDown = () => {\n  //setIsMouseDown(true);\n  //}\n\n  //const handleMouseUp = () => {\n  //setIsMouseDown(false);\n  //}\n\n  // const handleMouseMove = (evt) => {\n  // if (whileMoving) {\n  // setMapPos(getCursorPositionInElement(evt));\n  // };\n  // }\n  \n  // return (\n  //   <div>\n  //     <div class='Map'\n  //       onMouseDown={moveStart}\n  //       onMouseMove={whileMoves}\n  //       onMouseUp={moveEnd}>\n          \n  //      <div class =\"zoom\" onWheelCapture={Zoom}>\n  //       <img style={styles}\n  //         src=\"/images/campus_map_half.png\" alt=\"\" />\n\n  //       <div className='ImageFollow'\n  //       //onMouseMove={handleMouseMove}\n  //       //onMouseDown={handleMouseDown}\n  //       //onMouseUp={handleMouseUp}\n  //       >\n         \n         \n  //         x:{styles.left} | y:{styles.top}\n\n  //         <div className='msg' style={{ left: styles.left - 100, top: styles.top - 100 }}>\n  //           marker1\n  //         </div>\n\n  //         <div className='always_half' style={{ left: styles.left + 100, top: styles.top + 100 }}>\n  //           marker2\n  //         </div>\n  //         </div>\n\n  //         </div>\n  //     </div>\n  //   </div>\n\n  );\n\n};\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}