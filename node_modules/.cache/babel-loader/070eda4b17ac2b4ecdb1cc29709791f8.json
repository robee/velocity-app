{"ast":null,"code":"var _jsxFileName = \"/Users/leocabrera/Documents/Velocity-Concept-App/velocity-app/velocity-app/src/components/NewMap.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport * as parksData from \"./data/Buildings.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewMap() {\n  _s();\n\n  const [selectedPark, setSelectedPark] = useState(null);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    defaultZoom: 15,\n    defaultCenter: {\n      lat: 43.469761,\n      lng: -80.538811\n    },\n    children: [parksData.buildings.map(park => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: park.latitude,\n        lng: park.longitude\n      },\n      onClick: () => {\n        setSelectedPark(park);\n      }\n    }, park.buildingId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this)), selectedPark && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: selectedPark.latitude,\n        lng: selectedPark.longitude\n      },\n      onCloseClick: () => {\n        setSelectedPark(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedPark.buildingName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: selectedPark.Description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n}\n\n_s(NewMap, \"lqLqef+Um00vg+yM0kY8VQqn1wQ=\");\n\n_c = NewMap;\nexport default NewMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMap\");","map":{"version":3,"sources":["/Users/leocabrera/Documents/Velocity-Concept-App/velocity-app/velocity-app/src/components/NewMap.js"],"names":["React","useState","GoogleMap","Marker","InfoWindow","parksData","NewMap","selectedPark","setSelectedPark","lat","lng","buildings","map","park","latitude","longitude","buildingId","buildingName","Description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SACEC,SADF,EAEEC,MAFF,EAGEC,UAHF,QAIO,mBAJP;AAKA,OAAO,KAAKC,SAAZ,MAA2B,uBAA3B;;;AAIA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;AACA,sBACE,QAAC,SAAD;AACE,IAAA,WAAW,EAAE,EADf;AAEE,IAAA,aAAa,EAAE;AAAEQ,MAAAA,GAAG,EAAE,SAAP;AAAkBC,MAAAA,GAAG,EAAE,CAAC;AAAxB,KAFjB;AAAA,eAIGL,SAAS,CAACM,SAAV,CAAoBC,GAApB,CAAyBC,IAAD,iBACvB,QAAC,MAAD;AAEE,MAAA,QAAQ,EAAE;AAAEJ,QAAAA,GAAG,EAAEI,IAAI,CAACC,QAAZ;AAAsBJ,QAAAA,GAAG,EAAEG,IAAI,CAACE;AAAhC,OAFZ;AAGE,MAAA,OAAO,EAAE,MAAM;AACbP,QAAAA,eAAe,CAACK,IAAD,CAAf;AACD;AALH,OACOA,IAAI,CAACG,UADZ;AAAA;AAAA;AAAA;AAAA,YADD,CAJH,EAcGT,YAAY,iBACX,QAAC,UAAD;AACE,MAAA,QAAQ,EAAE;AAAEE,QAAAA,GAAG,EAAEF,YAAY,CAACO,QAApB;AAA8BJ,QAAAA,GAAG,EAAEH,YAAY,CAACQ;AAAhD,OADZ;AAEE,MAAA,YAAY,EAAE,MAAM;AAClBP,QAAAA,eAAe,CAAC,IAAD,CAAf;AACD,OAJH;AAAA,6BAME;AAAA,gCACE;AAAA,oBAAKD,YAAY,CAACU;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAIV,YAAY,CAACW;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAhCMZ,M;;KAAAA,M;AAkCT,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport {\n  GoogleMap,\n  Marker,\n  InfoWindow,\n} from \"react-google-maps\";\nimport * as parksData from \"./data/Buildings.json\";\n\n\n\nfunction NewMap() {\n    const [selectedPark, setSelectedPark] = useState(null);\n    return (\n      <GoogleMap\n        defaultZoom={15}\n        defaultCenter={{ lat: 43.469761, lng: -80.538811 }}\n      >\n        {parksData.buildings.map((park) => (\n          <Marker\n            key={park.buildingId}\n            position={{ lat: park.latitude, lng: park.longitude }}\n            onClick={() => {\n              setSelectedPark(park);\n            }}\n          />\n        ))}\n  \n        {selectedPark && (\n          <InfoWindow\n            position={{ lat: selectedPark.latitude, lng: selectedPark.longitude }}\n            onCloseClick={() => {\n              setSelectedPark(null);\n            }}\n          >\n            <div>\n              <h2>{selectedPark.buildingName}</h2>\n              <p>{selectedPark.Description}</p>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    );\n  }\n\nexport default NewMap;"]},"metadata":{},"sourceType":"module"}