{"ast":null,"code":"var _jsxFileName = \"/Users/mightymoe/Documents/GitHub/velocity-app/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from \"react\";\nimport './Map.css';\nimport './image_follow.css'; // const getCursorPositionInElement = (evt) => {\n// \treturn {\n// \t\tx : evt.clientX - evt.currentTarget.getBoundingClientRect().left,\n// \t\ty : evt.clientY - evt.currentTarget.getBoundingClientRect().top\n// \t}\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = () => {\n  _s();\n\n  // mouse position\n  //const [mousePos, setMousePos] = useState({x:0, y:0});\n  // map code\n  const [deltaX, setDeltaX] = useState(0);\n  const [deltaY, setDeltaY] = useState(0);\n  const [whileMoving, setWhileMoving] = useState(false);\n  const [styles, setStyles] = useState({\n    left: null,\n    top: null\n  });\n\n  const moveStart = e => {\n    setDeltaX(e.screenX - e.currentTarget.getBoundingClientRect().left);\n    setDeltaY(e.screenY - e.currentTarget.getBoundingClientRect().top);\n    setWhileMoving(true);\n  };\n\n  const whileMoves = e => {\n    //setMousePos(getCursorPositionInElement(e));\n    if (whileMoving) {\n      //setMapPos(e.screenX - deltaX, e.screenY - deltaY)\n      let left = e.screenX - deltaX;\n      let top = e.screenY - deltaY;\n      console.log(left, top); //if (left > -300 && top > -200 ) { \n\n      setStyles({\n        left: left,\n        top: top\n      }); //}\n    }\n  };\n\n  const moveEnd = () => {\n    setWhileMoving(false);\n  }; // marker code\n  //const [mousePos, setMousePos] = useState({x:0, y:0});\n  //const [isMouseDown, setIsMouseDown] = useState(false);\n  //const handleMouseDown = () => {\n  //setIsMouseDown(true);\n  //}\n  //const handleMouseUp = () => {\n  //setIsMouseDown(false);\n  //}\n  // const handleMouseMove = (evt) => {\n  //   if (whileMoving) {\n  //     setMousePos(getCursorPositionInElement(evt));\n  //   };\n  // }\n  // const alertFunction = (num) => {\n  //   //console.log('clicked');\n  //   if (((styles.x + (100 * num) - 50 <= mousePos.x) && (mousePos.x <= styles.x + (100 * num) + 50))\n  //       && ((styles.y + (100 * num) - 50 <= mousePos.y) && (mousePos.y <= styles.y + (100 * num) + 50))) {\n  //      alert(`Marker ${num} has been clicked`);\n  //   };\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"Map\",\n      onMouseDown: moveStart,\n      onMouseMove: whileMoves,\n      onMouseUp: moveEnd,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        style: styles,\n        src: \"/images/campus_map_half.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ImageFollow\" //onMouseMove={handleMouseMove}\n        //onMouseDown={handleMouseDown}\n        //onMouseUp={handleMouseUp}\n        ,\n        children: [\"x:\", styles.left, \", \", mousePos.x, \" | y:\", styles.top, \", \", mousePos.y, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"msg\",\n          style: {\n            left: styles.left + 100,\n            top: styles.top + 100\n          },\n          children: \"Marker1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"always_half\",\n          onClick: alertFunction(2),\n          style: {\n            left: styles.left + 200,\n            top: styles.top + 200\n          },\n          children: \"Marker2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Map, \"vOh3m9/+aREKaT4ljCTfaO0nnaM=\");\n\n_c = Map;\nexport default Map; // export default class Map extends Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {\n//         deltaX: 0,\n//         deltaY: 0,\n//         whileMoving: false,\n//         styles: {},\n//       }\n//       this.moveStart = this.moveStart.bind(this);\n//       this.whileMoving = this.whileMoving.bind(this);\n//       this.moveEnd = this.moveEnd.bind(this);\n//     }\n//     moveStart(e) {\n//       this.setState({\n//         deltaX: e.screenX - e.currentTarget.getBoundingClientRect().left,\n//         deltaY: e.screenY - e.currentTarget.getBoundingClientRect().top,\n//         whileMoving: true\n//       });\n//     }\n//     whileMoving(e) {\n//       if (this.state.whileMoving) {\n//         let left = e.screenX - this.state.deltaX;\n//         let top = e.screenY - this.state.deltaY;\n//         console.log(left, top)\n//         if (left > -300 && top > -200 )\n//         { this.setState({\n//           styles: {\n//             left: left,\n//             top: top\n//           }\n//         });}\n//       }\n//     }\n//     moveEnd() {\n//       this.setState({\n//         whileMoving: false\n//       });\n//     }\n//   //test\n//     render() {\n//       return (\n//         <div class='Map' \n//         onMouseDown= {this.moveStart}\n//         onMouseMove={this.whileMoving}\n//         onMouseUp={this.moveEnd}>\n//             <img style={this.state.styles}\n//             src=\"/images/campus_map_half.png\" alt=\"\"/>\n//             <ImageFollow/>\n//         </div>\n//       );\n//     }\n//   }\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/mightymoe/Documents/GitHub/velocity-app/src/components/Map.js"],"names":["React","useState","Map","deltaX","setDeltaX","deltaY","setDeltaY","whileMoving","setWhileMoving","styles","setStyles","left","top","moveStart","e","screenX","currentTarget","getBoundingClientRect","screenY","whileMoves","console","log","moveEnd","mousePos","x","y","alertFunction"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from \"react\";\nimport './Map.css';\nimport './image_follow.css';\n\n// const getCursorPositionInElement = (evt) => {\n// \treturn {\n// \t\tx : evt.clientX - evt.currentTarget.getBoundingClientRect().left,\n// \t\ty : evt.clientY - evt.currentTarget.getBoundingClientRect().top\n// \t}\n// };\n\nconst Map = () => {\n  // mouse position\n  //const [mousePos, setMousePos] = useState({x:0, y:0});\n\n  // map code\n\n  const[deltaX, setDeltaX] = useState(0);\n  const[deltaY, setDeltaY] = useState(0);\n  const[whileMoving, setWhileMoving] = useState(false);\n  const[styles, setStyles] = useState({left: null, top: null});\n\n const moveStart = (e) => {\n    setDeltaX(e.screenX - e.currentTarget.getBoundingClientRect().left);\n    setDeltaY(e.screenY - e.currentTarget.getBoundingClientRect().top);\n    setWhileMoving(true);\n  };\n\n  const whileMoves = (e) => {\n    //setMousePos(getCursorPositionInElement(e));\n\n    if (whileMoving) {\n        \n      //setMapPos(e.screenX - deltaX, e.screenY - deltaY)\n\n      let left = e.screenX - deltaX;\n      let top = e.screenY - deltaY;\n\n      console.log(left, top)\n     \n      //if (left > -300 && top > -200 ) { \n        setStyles({\n            left: left,\n            top: top\n          \n        });\n      //}\n    }\n  };\n\n const  moveEnd = () => {\n    setWhileMoving(false);\n  };\n\n  // marker code\n\n    //const [mousePos, setMousePos] = useState({x:0, y:0});\n    //const [isMouseDown, setIsMouseDown] = useState(false);\n  \n  \n    //const handleMouseDown = () => {\n      //setIsMouseDown(true);\n    //}\n  \n    //const handleMouseUp = () => {\n      //setIsMouseDown(false);\n    //}\n  \n    // const handleMouseMove = (evt) => {\n    //   if (whileMoving) {\n    //     setMousePos(getCursorPositionInElement(evt));\n    //   };\n    // }\n\n    // const alertFunction = (num) => {\n    //   //console.log('clicked');\n    //   if (((styles.x + (100 * num) - 50 <= mousePos.x) && (mousePos.x <= styles.x + (100 * num) + 50))\n    //       && ((styles.y + (100 * num) - 50 <= mousePos.y) && (mousePos.y <= styles.y + (100 * num) + 50))) {\n    //      alert(`Marker ${num} has been clicked`);\n    //   };\n    // };\n\n\n\n    return (\n      <div>\n      <div class='Map' \n      onMouseDown= {moveStart}\n      onMouseMove={whileMoves}\n      onMouseUp={moveEnd}>\n          <img style={styles}\n          src=\"/images/campus_map_half.png\" alt=\"\"/>\n\n      <div className='ImageFollow'\n\t\t\t//onMouseMove={handleMouseMove}\n\t\t\t//onMouseDown={handleMouseDown}\n\t\t\t//onMouseUp={handleMouseUp}\n\t\t>\n\t\tx:{styles.left}, {mousePos.x} | y:{styles.top}, {mousePos.y}\n\n\t\t<div className='msg' \n         style={{left: styles.left + 100, top: styles.top + 100}}>\n\t\t\tMarker1\n\t\t</div>\n\n\t\t<div className='always_half' onClick={alertFunction(2)}\n         style={{left: styles.left + 200, top: styles.top + 200}}>\n\t\t\tMarker2\n\t\t</div>\n\n\t</div>\n      </div>\n      </div>\n\n    );\n\n  };\n\nexport default Map;\n\n\n// export default class Map extends Component {\n  \n//     constructor(props) {\n//       super(props);\n  \n//       this.state = {\n//         deltaX: 0,\n//         deltaY: 0,\n//         whileMoving: false,\n//         styles: {},\n//       }\n  \n//       this.moveStart = this.moveStart.bind(this);\n//       this.whileMoving = this.whileMoving.bind(this);\n//       this.moveEnd = this.moveEnd.bind(this);\n  \n//     }\n    \n//     moveStart(e) {\n//       this.setState({\n        \n        \n//         deltaX: e.screenX - e.currentTarget.getBoundingClientRect().left,\n//         deltaY: e.screenY - e.currentTarget.getBoundingClientRect().top,\n//         whileMoving: true\n  \n//       });\n//     }\n  \n//     whileMoving(e) {\n//       if (this.state.whileMoving) {\n        \n\n//         let left = e.screenX - this.state.deltaX;\n//         let top = e.screenY - this.state.deltaY;\n  \n//         console.log(left, top)\n       \n//         if (left > -300 && top > -200 )\n//         { this.setState({\n//           styles: {\n//             left: left,\n//             top: top\n//           }\n//         });}\n       \n      \n//       }\n    \n//     }\n  \n//     moveEnd() {\n//       this.setState({\n//         whileMoving: false\n//       });\n//     }\n//   //test\n//     render() {\n//       return (\n      \n//         <div class='Map' \n//         onMouseDown= {this.moveStart}\n//         onMouseMove={this.whileMoving}\n//         onMouseUp={this.moveEnd}>\n//             <img style={this.state.styles}\n//             src=\"/images/campus_map_half.png\" alt=\"\"/>\n//             <ImageFollow/>\n//         </div>\n\n//       );\n  \n//     }\n//   }\n"]},"metadata":{},"sourceType":"module"}